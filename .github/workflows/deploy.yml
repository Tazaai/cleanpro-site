name: Deploy Backend & Frontend to Google Cloud

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        cd frontend && npm install
        cd ../backend && npm install
    
    - name: Run Playwright tests
      run: npx playwright test

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    env:
      GCP_PROJECT: ${{ secrets.GCP_PROJECT }}
      FIREBASE_KEY: ${{ secrets.FIREBASE_KEY }}
      GOOGLE_MAPS_API_KEY: ${{ secrets.GOOGLE_MAPS_API_KEY }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup Google Cloud CLI
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker for GCR
        run: gcloud auth configure-docker

      - name: Build & Deploy Backend to Cloud Run
        run: |
          cd backend
          gcloud builds submit --tag "gcr.io/${GCP_PROJECT}/cleanpro-backend" .
          gcloud run deploy cleanpro-backend \
            --image "gcr.io/${GCP_PROJECT}/cleanpro-backend" \
            --region europe-west1 \
            --allow-unauthenticated \
            --port 8080 \
            --set-env-vars "FIREBASE_KEY=${FIREBASE_KEY},GOOGLE_MAPS_API_KEY=${GOOGLE_MAPS_API_KEY},OPENAI_API_KEY=${OPENAI_API_KEY},GCP_PROJECT=${GCP_PROJECT}"

      - name: Build Frontend
        run: |
          cd frontend
          npm ci
          # Get backend URL for frontend build
          BACKEND_URL=$(gcloud run services describe cleanpro-backend --region=europe-west1 --format='value(status.url)')
          export VITE_API_BASE=$BACKEND_URL
          export VITE_GOOGLE_MAPS_API_KEY=${{ secrets.GOOGLE_MAPS_API_KEY }}
          npm run build

      - name: Build & Deploy Frontend to Cloud Run
        run: |
          cd frontend
          BACKEND_URL=$(gcloud run services describe cleanpro-backend --region=europe-west1 --format='value(status.url)')
          gcloud builds submit --tag "gcr.io/${GCP_PROJECT}/cleanpro-frontend" .
          gcloud run deploy cleanpro-frontend \
            --image "gcr.io/${GCP_PROJECT}/cleanpro-frontend" \
            --region europe-west1 \
            --allow-unauthenticated \
            --port 8080 \
            --set-env-vars "VITE_API_BASE=${BACKEND_URL},VITE_GOOGLE_MAPS_API_KEY=${GOOGLE_MAPS_API_KEY}"